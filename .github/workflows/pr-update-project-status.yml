name: List All Issues in Project

on:
  workflow_dispatch:

permissions:
  contents: read
  pull-requests: read
  issues: read

jobs:
  list-project-issues:
    runs-on: ubuntu-latest

    steps:
      - name: Login to GitHub CLI with PAT
        run: echo "${{ secrets.ORG_PROJECT_TOKEN }}" | gh auth login --with-token

      - name: Check GH CLI Authentication
        run: gh auth status

      - name: Query all issues in the organization project
        env:
          GH_TOKEN: ${{ secrets.ORG_PROJECT_TOKEN }}
          OWNER: "vegetables-school"
          PROJECT_NUMBER: "1"
        run: |
          set -xe

          # 获取 Project v2 的 id
          project_id=$(gh api graphql -f query='
            query($login: String!, $number: Int!) {
              organization(login: $login) {
                projectV2(number: $number) { id }
              }
            }' -F login="$OWNER" -F number="$PROJECT_NUMBER" --jq '.data.organization.projectV2.id')
          echo "project_id: $project_id"

          # 查询项目板内的所有 issue 信息
          page_size=100
          after_cursor=null
          while :; do
            if [[ "$after_cursor" == "null" ]]; then
              after_clause=""
            else
              after_clause=", after: \"$after_cursor\""
            fi

            query_result=$(gh api graphql -f query="
              query {
                node(id: \"$project_id\") {
                  ... on ProjectV2 {
                    items(first: $page_size$after_clause) {
                      pageInfo {
                        endCursor
                        hasNextPage
                      }
                      nodes {
                        id
                        content {
                          ... on Issue {
                            id
                            number
                            title
                            state
                            url
                          }
                        }
                      }
                    }
                  }
                }
              }
            ")

            echo "$query_result" | jq -c '.data.node.items.nodes[] | select(.content != null) | {project_item_id: .id, issue_id: .content.id, number: .content.number, title: .content.title, state: .content.state, url: .content.url}'

            has_next=$(echo "$query_result" | jq -r '.data.node.items.pageInfo.hasNextPage')
            if [[ "$has_next" != "true" ]]; then
              break
            fi
            after_cursor=$(echo "$query_result" | jq -r '.data.node.items.pageInfo.endCursor')
          done
